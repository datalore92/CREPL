name: Build Releases

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual trigger of workflow

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-SDL2
          mingw-w64-x86_64-SDL2_ttf
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-make
          mingw-w64-x86_64-harfbuzz
    - name: Build
      shell: msys2 {0}
      run: |
        mkdir -p build
        cd build
        # Use verbose build to see any errors
        cmake .. -G "MinGW Makefiles" -DCMAKE_MAKE_PROGRAM=mingw32-make
        mingw32-make VERBOSE=1
    - name: Package
      shell: msys2 {0}
      run: |
        # Create directory and copy executable
        mkdir -p releases/windows
        cp build/crepl.exe releases/windows/
        
        # List all DLL dependencies of the executable
        echo "Listing DLL dependencies of the executable..."
        ldd build/crepl.exe
        
        # Copy required DLLs using correct names
        cp /mingw64/bin/SDL2.dll releases/windows/
        cp /mingw64/bin/SDL2_ttf.dll releases/windows/
        cp /mingw64/bin/libfreetype-6.dll releases/windows/
        cp /mingw64/bin/zlib1.dll releases/windows/
        cp /mingw64/bin/libbz2-1.dll releases/windows/
        cp /mingw64/bin/libpng16-16.dll releases/windows/
        cp /mingw64/bin/libharfbuzz-0.dll releases/windows/
        cp /mingw64/bin/libgcc_s_seh-1.dll releases/windows/
        cp /mingw64/bin/libwinpthread-1.dll releases/windows/
        cp /mingw64/bin/libstdc++-6.dll releases/windows/
        cp /mingw64/bin/libbrotlidec.dll releases/windows/
        cp /mingw64/bin/libbrotlicommon.dll releases/windows/
        cp /mingw64/bin/libintl-8.dll releases/windows/
        cp /mingw64/bin/libgraphite2.dll releases/windows/
        cp /mingw64/bin/libglib-2.0-0.dll releases/windows/
        cp /mingw64/bin/libiconv-2.dll releases/windows/
        cp /mingw64/bin/libpcre2-8-0.dll releases/windows/
    
    - name: Create ZIP Archive
      shell: pwsh
      run: |
        cd ${{ github.workspace }}
        Compress-Archive -Path "releases/windows/*" -DestinationPath "crepl-windows.zip" -Force
        dir crepl-windows.zip
    
    - uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: crepl-windows.zip

  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc make cmake libsdl2-dev libsdl2-ttf-dev
    - name: Build
      run: |
        mkdir build
        cd build
        cmake .. 
        cmake --build . 
    - name: Package
      run: |
        mkdir -p releases/linux
        cp build/crepl releases/linux/
        chmod +x releases/linux/crepl
        cd releases/linux
        tar czf ../../crepl-linux.tar.gz *
    - uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: crepl-linux.tar.gz

  create-release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
    - name: List Downloaded Artifacts
      run: |
        find . -type f -name "*.zip" -o -name "*.tar.gz"
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          windows-build/crepl-windows.zip
          linux-build/crepl-linux.tar.gz
        generate_release_notes: true